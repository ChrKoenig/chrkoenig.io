<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Christian König</title>
    <link>https://chrkoenig.io/tags/r/</link>
    <description>Recent content in R on Christian König</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://chrkoenig.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Shiny modules to build reusable UI components</title>
      <link>https://chrkoenig.io/post/2022-06-19-using-shiny-modules-to-build-reusable-ui-components/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://chrkoenig.io/post/2022-06-19-using-shiny-modules-to-build-reusable-ui-components/</guid>
      <description>Background I am currently building a Shiny application that converts tabular ecological field data into a well-defined exchange format in XML. Part of the UI consists of an input form, where users can map columns of their uploaded data to specific elements of the exchange format. The challenge is that the number of mappings &amp;ndash; and thus the number of required input fields &amp;ndash; depends on the user data. Ideally, users would be able to dynamically add and remove UI elements, while the server collects all valid input values from the UI.</description>
    </item>
    
  </channel>
</rss>
